////////////////////////
// Typography Mixins //
//////////////////////

@mixin font-size($sizeValue: 1.6) { // Font size base 16
    font-size: ($sizeValue * 10) + px;
    font-size: $sizeValue + rem;
}

@function calculateRem($size) { // Font to px
    $remSize: $size / 16px;
    @return $remSize * 1rem;
}

@mixin font-size-px($size) { // font to px
    font-size: $size;
    font-size: calculateRem($size);
}

@mixin font-smoothing { // Only applied to bold weight text
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
}

@function rem($px) { // Returns rem
    @return ($px / $base-font-size) * 1rem;
}

@function em($px) { // Returns em
    @return ($px / $base-font-size) * 1em;
}


//////////////////////
// BBVA FONT ICONS //
////////////////////


@mixin bbva-font-icon {
  font-family: "bbva-icons" !important;
  content: attr(data-icon);
  font-style: normal !important;
  font-weight: normal !important;
  font-variant: normal !important;
  text-transform: none !important;
  speak: none;
  line-height: 1;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

////////////////////////
//    CLEAR FIX      //
//////////////////////

@mixin clearfix {
  &::after {
    display: block;
    clear: both;
    content: "";
  }
}

@mixin table-cell($display-cell: table-cell, $valign: middle, $lh: 5) {
    display: $display-cell;
    vertical-align: $valign;
    line-height: $lh;
}

@mixin links-outline {
    &:hover,
    &:focus,
    &:active {
        outline: none;
        text-decoration: none;
    }
}

@mixin hide-text {
    overflow: hidden;
    text-indent: -9000px;
    display: block;
}

@mixin image-2x($image, $width, $height) {
    @media (min--moz-device-pixel-ratio: 1.3), (-o-min-device-pixel-ratio: 2.6/2), (-webkit-min-device-pixel-ratio: 1.3), (min-device-pixel-ratio: 1.3), (min-resolution: 1.3dppx) {
        /* on retina, use image that's scaled by 2 */
        background-image: url($image);
        background-size: $width $height;
    }
}

// Usage: @include image-2x("logo2x.png", 100px, 25px);
@mixin alpha-background-color($color, $background) {
    $percent: alpha($color) * 100%;
    $opaque: opacify($color, 1);
    $solid-color: mix($opaque, $background, $percent);
    background-color: $solid-color;
    background-color: $color;
}


@mixin hidden {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    border: 0;
    visibility: visible;
    white-space: nowrap;
}

@mixin element($element){
    &__#{$element}{
        @content;
    }
}

@mixin modifier($modifier){
    &--#{$modifier}{
        @content;
    }
}

@mixin stretch-col($direction: left, $size: 3000px){
    @if $direction == left {
        &:after {
            content: " ";
            background: inherit;
            height: 100%;
            width: $size;
            z-index: -1;
            position: absolute;
            top: 0;
            left: 0;
        }

    } 
    @if $direction == right {
        &:before {
            content: " ";
            background: inherit;
            height: 100%;
            width: $size;
            z-index: -1;
            position: absolute;
            top: 0;
            right: 0;
        }
    }
}

@mixin background-full-width-mobile() {
    @include breakpoint(mobile) {
        margin-left: -16px;
        margin-right: -16px;
        padding-left: 16px;
        padding-right: 16px;
    }
}

// mixin
@mixin angle($pseudo, $flip: false, $angle: 1.5deg) {
    // Possible values for $pseudo are: before, after, both
    @if $pseudo == 'before' or $pseudo == 'after' or $pseudo == 'both' {
      position: relative;
      z-index: 1;
      $selector: if($pseudo == 'both', '&:before,&:after', '&:#{$pseudo}');
  
      #{$selector} {
        background: inherit;
        content: '';
        display: block;
        height: 50%;
        left: 0;
        position: absolute;
        right: 0;
        z-index: -1;
        -webkit-backface-visibility: hidden; // for Chrome Windows
      }
  
      @if $pseudo == 'before' {
        #{$selector} {
          top: 0;
  
          @if $flip {
            transform: skewY($angle * -1);
            transform-origin: 0 0;
          } @else {
            transform: skewY($angle);
            transform-origin: 100% 0;
          }
        }
      }
  
      @if $pseudo == 'after' {
        #{$selector} {
          bottom: 0;
  
          @if $flip {
            transform: skewY($angle);
            transform-origin: 0 100%;
          } @else {
            transform: skewY($angle * -1);
            transform-origin: 100%;
          }
        }
      }
  
      @if $pseudo == 'both' {
        &:before {
          top: 0;
  
          @if $flip {
            transform: skewY($angle * -1);
            transform-origin: 0 0;
          } @else {
            transform: skewY($angle);
            transform-origin: 100% 0;
          }
        }
  
        &:after {
          bottom: 0;
  
          @if $flip {
            transform: skewY($angle);
            transform-origin: 0 0;
          } @else {
            transform: skewY($angle * -1);
            transform-origin: 100%;
          }
        }
      }
    }
  }

////////////////////////
//    Target IE      //
//////////////////////

@mixin targetie {
  @media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {
    @content;
  }
}